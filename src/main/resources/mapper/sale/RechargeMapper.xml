<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xfxg99.sale.dao.RechargeMapper" >
  <resultMap id="BaseResultMap" type="com.xfxg99.sale.model.Recharge" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="recharge_time" property="rechargeTime" jdbcType="TIMESTAMP" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="INTEGER" />
    <result column="recharge_desc" property="rechargeDesc" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ViewModelResultMap" type="com.xfxg99.sale.viewmodel.RechargeVM" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="orgName" property="orgName" jdbcType="VARCHAR" />
    <result column="custName" property="custName" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="recharge_time" property="rechargeTime" jdbcType="TIMESTAMP" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="INTEGER" />
    <result column="recharge_desc" property="rechargeDesc" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insertAccountLog"  parameterType="java.util.Map"  >
   insert into ecs_account_log (user_id, user_money, 
      frozen_money, rank_points, pay_points, 
      change_time,change_desc,change_type)
    values (#{userId,jdbcType=INTEGER}, #{userMoney,jdbcType=DECIMAL}, 
      #{frozenMoney,jdbcType=DECIMAL}, #{rankPoints,jdbcType=INTEGER}, #{payPoints,jdbcType=INTEGER}, 
      #{changeTime,jdbcType=TIMESTAMP},#{changeDesc,jdbcType=VARCHAR},#{changeType,jdbcType=INTEGER})
  </insert>
  <select id="countByMap" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(*)
  	from t_recharge   as r 
  	left join ecs_users as c on r.cust_id    = c.user_id
  	left join t_organization as o  on o.id   = r.org_id
  	where 1=1 
  	
  	<if test ="orgname !=null">
  			and o.name like CONCAT('%','${orgname}','%' )  
 	</if> 
  	
  	<if test ="isConfirm ==1">
  			and r.confirm_user_id is not null
 	</if>
  	
  	<if test ="isConfirm ==2">
  			and r.confirm_user_id is  null
 	</if>
  	
  	<if test ="custname !=null">
  			and c.user_name like CONCAT('%','${custname}','%' )  
 	</if> 
  </select>
  
  <select id="selectCustomerList"  resultType="com.xfxg99.sale.viewmodel.CustomerVM">
  	select user_id as id,user_name as name 
  	from ecs_users order by user_id asc  
  </select>
  
  <select id="selectOrganList"  resultType="com.xfxg99.sale.viewmodel.CustomerVM">
  	select id,name
  	from t_organization order by id asc  
  </select>
  <select id="loadrechargelistWithPage" parameterType="java.util.Map" resultMap="ViewModelResultMap">
  	select r.id        as    id,
  		   r.org_id    as    org_id,
  		   o.name      as    orgName,
  		   r.cust_id   as    cust_id,
  		   c.user_name as    custName,
  		   r.money     as    money,
  		   r.recharge_time   as    rechargeTime,
  		   r.confirm_time    as    confirmTime,
  		   r.confirm_user_id as    confirmUserId,
  		   (select u.name from t_user as u where u.id = r.confirm_user_id
  		   <if test ="confirmname !=null">
  		    	and u.name like CONCAT('%','${confirmname}','%' )
  		    </if>
  		   ) as userName,
  		   r.recharge_desc   as    rechargeDesc
  	from t_recharge as r 
  	left join t_user    as u on r.confirm_user_id = u.id 
  	left join ecs_users as c on r.cust_id    = c.user_id
  	left join t_organization as o  on o.id   = r.org_id
  	
  	where 1=1 
  	
  	<if test ="orgname !=null">
  			and o.name like CONCAT('%','${orgname}','%' )  
 	</if> 
  	
  	<if test ="isConfirm ==1">
  			and r.confirm_user_id is not null
 	</if>
  	
  	<if test ="isConfirm ==2">
  			and r.confirm_user_id is  null
 	</if>
  	
  	<if test ="custname !=null">
  			and c.user_name like CONCAT('%','${custname}','%' )  
 	</if>
  	
  	<if test="pageStart !=null">
  		limit #{pageStart,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  	</if>
  </select>
  <sql id="Base_Column_List" >
    id, org_id, cust_id, money, recharge_time, confirm_time, confirm_user_id,recharge_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_recharge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_recharge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xfxg99.sale.model.Recharge" >
    insert into t_recharge (id, org_id, cust_id, 
      money, recharge_time, confirm_time, 
      confirm_user_id,recharge_desc)
    values (#{id,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL}, #{rechargeTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP}, 
      #{confirmUserId,jdbcType=INTEGER},#{rechargeDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xfxg99.sale.model.Recharge" >
    insert into t_recharge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="rechargeTime != null" >
        recharge_time,
      </if>
      <if test="confirmTime != null" >
        confirm_time,
      </if>
      <if test="confirmUserId != null" >
        confirm_user_id,
      </if>  
      <if test="rechargeDesc != null" >
        recharge_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="rechargeTime != null" >
        #{rechargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null" >
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmUserId != null" >
        #{confirmUserId,jdbcType=INTEGER},
      </if>
      <if test="rechargeDesc != null" >
        #{rechargeDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xfxg99.sale.model.Recharge" >
    update t_recharge
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="rechargeTime != null" >
        recharge_time = #{rechargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null" >
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmUserId != null" >
        confirm_user_id = #{confirmUserId,jdbcType=INTEGER},
      </if>
      <if test="rechargeDesc != null" >
        recharge_desc = #{rechargeDesc,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xfxg99.sale.model.Recharge" >
    update t_recharge
    set org_id = #{orgId,jdbcType=INTEGER},
      cust_id = #{custId,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      recharge_time = #{rechargeTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      confirm_user_id = #{confirmUserId,jdbcType=INTEGER}, 
      recharge_desc = #{rechargeDesc,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>