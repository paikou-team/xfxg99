<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xfxg99.sale.dao.StockBillMapper" >
  <resultMap id="BaseResultMap" type="com.xfxg99.sale.model.StockBill" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_type" property="billType" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="bill_time" property="billTime" jdbcType="TIMESTAMP" />
    <result column="send_org_id" property="sendOrgId" jdbcType="INTEGER" />
    <result column="receive_org_id" property="receiveOrgId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="preparer_id" property="preparerId" jdbcType="INTEGER" />
    <result column="receiver_id" property="receiverId" jdbcType="INTEGER" />
    <result column="prepare_time" property="prepareTime" jdbcType="TIMESTAMP" />
    <result column="receive_tiime" property="receiveTiime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, bill_type, serial_no, bill_time, send_org_id, receive_org_id, state, preparer_id, 
    receiver_id, prepare_time, receive_tiime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xfxg99.sale.model.StockBill" >
    insert into t_stock (id, bill_type, serial_no, 
      bill_time, send_org_id, receive_org_id, 
      state, preparer_id, receiver_id, 
      prepare_time, receive_tiime)
    values (#{id,jdbcType=INTEGER}, #{billType,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR}, 
      #{billTime,jdbcType=TIMESTAMP}, #{sendOrgId,jdbcType=INTEGER}, #{receiveOrgId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{preparerId,jdbcType=INTEGER}, #{receiverId,jdbcType=INTEGER}, 
      #{prepareTime,jdbcType=TIMESTAMP}, #{receiveTiime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xfxg99.sale.model.StockBill" >
    insert into t_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="billType != null" >
        bill_type,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="billTime != null" >
        bill_time,
      </if>
      <if test="sendOrgId != null" >
        send_org_id,
      </if>
      <if test="receiveOrgId != null" >
        receive_org_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="preparerId != null" >
        preparer_id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="prepareTime != null" >
        prepare_time,
      </if>
      <if test="receiveTiime != null" >
        receive_tiime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billType != null" >
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="billTime != null" >
        #{billTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendOrgId != null" >
        #{sendOrgId,jdbcType=INTEGER},
      </if>
      <if test="receiveOrgId != null" >
        #{receiveOrgId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="preparerId != null" >
        #{preparerId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="prepareTime != null" >
        #{prepareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTiime != null" >
        #{receiveTiime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xfxg99.sale.model.StockBill" >
    update t_stock
    <set >
      <if test="billType != null" >
        bill_type = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="billTime != null" >
        bill_time = #{billTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendOrgId != null" >
        send_org_id = #{sendOrgId,jdbcType=INTEGER},
      </if>
      <if test="receiveOrgId != null" >
        receive_org_id = #{receiveOrgId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="preparerId != null" >
        preparer_id = #{preparerId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="prepareTime != null" >
        prepare_time = #{prepareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTiime != null" >
        receive_tiime = #{receiveTiime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xfxg99.sale.model.StockBill" >
    update t_stock
    set bill_type = #{billType,jdbcType=VARCHAR},
      serial_no = #{serialNo,jdbcType=VARCHAR},
      bill_time = #{billTime,jdbcType=TIMESTAMP},
      send_org_id = #{sendOrgId,jdbcType=INTEGER},
      receive_org_id = #{receiveOrgId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      preparer_id = #{preparerId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER},
      prepare_time = #{prepareTime,jdbcType=TIMESTAMP},
      receive_tiime = #{receiveTiime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>