<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xfxg99.sale.dao.StockBillMapper">
  <resultMap id="BaseResultMap" type="com.xfxg99.sale.model.StockBill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bill_type" jdbcType="INTEGER" property="billType" />
    <result column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="bill_time" jdbcType="TIMESTAMP" property="billTime" />
    <result column="stock_in_org_id" jdbcType="INTEGER" property="stockInOrgId" />
    <result column="stock_out_org_id" jdbcType="INTEGER" property="stockOutOrgId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="preparer_org_id" jdbcType="INTEGER" property="preparerOrgId" />
    <result column="preparer_id" jdbcType="INTEGER" property="preparerId" />
    <result column="prepare_time" jdbcType="TIMESTAMP" property="prepareTime" />
    <result column="confirmer_org_id" jdbcType="INTEGER" property="confirmerOrgId" />
    <result column="confirmer_id" jdbcType="INTEGER" property="confirmerId" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  

  <sql id="Base_Column_List">
    id, bill_type, serial_no, bill_time, stock_in_org_id, stock_out_org_id, state, preparer_org_id, 
    preparer_id, prepare_time, confirmer_org_id, confirmer_id, confirm_time,description
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.xfxg99.sale.model.StockBill" useGeneratedKeys="true" keyProperty="id">
    insert into t_stock (id, bill_type, serial_no, 
      bill_time, stock_in_org_id, stock_out_org_id, 
      state, preparer_org_id, preparer_id, 
      prepare_time, confirmer_org_id, confirmer_id, 
      confirm_time,description)
    values (#{id,jdbcType=INTEGER}, #{billType,jdbcType=INTEGER}, #{serialNo,jdbcType=VARCHAR}, 
      #{billTime,jdbcType=TIMESTAMP}, #{stockInOrgId,jdbcType=INTEGER}, #{stockOutOrgId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{preparerOrgId,jdbcType=INTEGER}, #{preparerId,jdbcType=INTEGER}, 
      #{prepareTime,jdbcType=TIMESTAMP}, #{confirmerOrgId,jdbcType=INTEGER}, #{confirmerId,jdbcType=INTEGER}, 
      #{confirmTime,jdbcType=TIMESTAMP},#{description,jdbcType=VARCHAR})
      
  </insert>
  <insert id="insertSelective" parameterType="com.xfxg99.sale.model.StockBill" useGeneratedKeys="true" keyProperty="id">
    insert into t_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="billType != null">
        bill_type,
      </if>
      <if test="serialNo != null">
        serial_no,
      </if>
      <if test="billTime != null">
        bill_time,
      </if>
      <if test="stockInOrgId != null">
        stock_in_org_id,
      </if>
      <if test="stockOutOrgId != null">
        stock_out_org_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="preparerOrgId != null">
        preparer_org_id,
      </if>
      <if test="preparerId != null">
        preparer_id,
      </if>
      <if test="prepareTime != null">
        prepare_time,
      </if>
      <if test="confirmerOrgId != null">
        confirmer_org_id,
      </if>
      <if test="confirmerId != null">
        confirmer_id,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=INTEGER},
      </if>
      <if test="serialNo != null">
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="billTime != null">
        #{billTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockInOrgId != null">
        #{stockInOrgId,jdbcType=INTEGER},
      </if>
      <if test="stockOutOrgId != null">
        #{stockOutOrgId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="preparerOrgId != null">
        #{preparerOrgId,jdbcType=INTEGER},
      </if>
      <if test="preparerId != null">
        #{preparerId,jdbcType=INTEGER},
      </if>
      <if test="prepareTime != null">
        #{prepareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmerOrgId != null">
        #{confirmerOrgId,jdbcType=INTEGER},
      </if>
      <if test="confirmerId != null">
        #{confirmerId,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xfxg99.sale.model.StockBill">
    update t_stock
    <set>
      <if test="billType != null">
        bill_type = #{billType,jdbcType=INTEGER},
      </if>
      <if test="serialNo != null">
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="billTime != null">
        bill_time = #{billTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockInOrgId != null">
        stock_in_org_id = #{stockInOrgId,jdbcType=INTEGER},
      </if>
      <if test="stockOutOrgId != null">
        stock_out_org_id = #{stockOutOrgId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="preparerOrgId != null">
        preparer_org_id = #{preparerOrgId,jdbcType=INTEGER},
      </if>
      <if test="preparerId != null">
        preparer_id = #{preparerId,jdbcType=INTEGER},
      </if>
      <if test="prepareTime != null">
        prepare_time = #{prepareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmerOrgId != null">
        confirmer_org_id = #{confirmerOrgId,jdbcType=INTEGER},
      </if>
      <if test="confirmerId != null">
        confirmer_id = #{confirmerId,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.xfxg99.sale.model.StockBill">
    update t_stock
    set bill_type = #{billType,jdbcType=INTEGER},
      serial_no = #{serialNo,jdbcType=VARCHAR},
      bill_time = #{billTime,jdbcType=TIMESTAMP},
      stock_in_org_id = #{stockInOrgId,jdbcType=INTEGER},
      stock_out_org_id = #{stockOutOrgId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      preparer_org_id = #{preparerOrgId,jdbcType=INTEGER},
      preparer_id = #{preparerId,jdbcType=INTEGER},
      prepare_time = #{prepareTime,jdbcType=TIMESTAMP},
      confirmer_org_id = #{confirmerOrgId,jdbcType=INTEGER},
      confirmer_id = #{confirmerId,jdbcType=INTEGER},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap id="VMMap" type="com.xfxg99.sale.viewmodel.StockBillVM" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_type" property="billType" jdbcType="INTEGER" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="bill_time" property="billTime" jdbcType="TIMESTAMP" />
    
    <result column="stock_in_org_id" property="stockInOrgId" jdbcType="INTEGER" />
    <result column="stock_in_org_name" property="stockInOrgName" jdbcType="VARCHAR" />
    <result column="stock_out_org_id" property="stockOutOrgId" jdbcType="INTEGER" />
    <result column="stock_out_org_name" property="stockOutOrgName" jdbcType="VARCHAR" />
    
    <result column="state" property="state" jdbcType="INTEGER" />
    
    <result column="preparer_org_id" property="preparerOrgId" jdbcType="INTEGER" />
    <result column="preparer_org_name" property="preparerOrgName" jdbcType="VARCHAR" />
    <result column="preparer_id" property="preparerId" jdbcType="INTEGER" />
    <result column="preparer_name" property="preparerName" jdbcType="VARCHAR" />
    <result column="prepare_time" property="prepareTime" jdbcType="TIMESTAMP" />
    
    <result column="confirmer_org_id" property="confirmerOrgId" jdbcType="INTEGER" />
    <result column="confirmer_org_name" property="confirmerOrgName" jdbcType="VARCHAR" />
    <result column="confirmer_id" property="confirmer_id" jdbcType="INTEGER" />
    <result column="confirmer_name" property="confirmer_name" jdbcType="VARCHAR" />
    <result column="confirm_time" property="confirm_time" jdbcType="TIMESTAMP" />
    
    <result column="description" property="description" jdbcType="VARCHAR" />
    
    <collection property="stockGoods" resultMap="GoodsVMMap"/>
    
    
  </resultMap>
  
  <resultMap id="GoodsVMMap" type="com.xfxg99.sale.viewmodel.StockGoodsVM" >
    <id column="stock_goods_id" property="id" jdbcType="INTEGER" />
    <result column="stock_id" property="stockId" jdbcType="INTEGER" />
    <result column="goods_id" property="goods_id" jdbcType="VARCHAR" />
    <result column="goods_name" property="goods_name" jdbcType="VARCHAR" />
    <result column="goods_number" property="goodsNumber" jdbcType="VARCHAR" />
    
    <result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
    <result column="goods_price" property="goodsPrice" jdbcType="DECIMAL" />
    <result column="allocation_price" property="allocationPrice" jdbcType="DECIMAL" />
  </resultMap>
  
  
  <sql id="VM_Column_List">
  	s.id				as	id,
  	s.bill_type			as 	bill_type,
  	s.serial_no			as	serial_no,
  	s.bill_time			as	bill_time,
  	s.stock_in_org_id	as	stock_in_org_id,
  	s.stock_out_org_id	as	stock_out_org_id,
  	s.state				as	state,
  	s.preparer_org_id	as	preparer_org_id,
  	s.preparer_id		as	preparer_id,
  	s.confirmer_org_id	as	confirmer_org_id,
  	s.confirmer_id		as	confirmer_id,
  	s.prepare_time		as	prepare_time,
  	s.confirm_time		as	confirm_time,
  	sio.name			as	stock_in_org_name,
  	soo.name			as	stock_out_org_name,
  	po.name				as	preparer_org_name,
  	co.name				as	confirmer_org_name,
  	pu.name				as	preparer_name,
  	ru.name				as	confirmer_name,
  	sg.id				as	stock_goods_id,
  	sg.stock_id			as	stock_id,
  	sg.goods_id			as	goods_id,
  	g.goods_name		as	goods_name,
  	sg.goods_number		as	goods_number,
  	sg.market_price		as	marketPrice,
  	sg.goods_price		as	goods_price,
  	sg.allocation_price	as	allocation_price,
  	s.description		as	description
  </sql>
  
  <select id="countVMByMap" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select 
  		count(*)
  	from t_stock as s
  	left join 	t_organization 	as sio 	on 	s.stock_in_org_id 	= sio.id
  	left join 	t_organization 	as soo	on	s.stock_out_org_id	=soo.id
  	left join 	t_organization 	as po 	on 	s.preparer_org_id 	= po.id
  	left join 	t_organization 	as co	on	s.confirmer_org_id	=co.id
  	left join	t_user			as pu	on	s.preparer_id		=pu.id
  	left join	t_user			as ru	on	s.receiver_id		=ru.id
  	left join	t_stock_goods	as sg	on	sg.stock_id			=s.id
  	left join	ecs_goods		as g	on	sg.goods_id			=g.goods_id
  	where 1=1 
  	<if test="serialNo != null" >
  	and s.serial_no like CONCAT( '%',#{serialNo,jdbcType=VARCHAR},'%')
  	</if>
  	<if test="stock_in_org_id != null" >
  	and s.stock_in_org_id =#{stockInOrgId,jdbcType=INTEGER}
  	</if> 
  	<if test="stock_out_org_id != null" >
  	and s.stock_out_org_id =#{stockOutOrgId,jdbcType=INTEGER}
  	</if>
  	<if test="beginDate != null" >
  	and s.bill_time &gt;=#{beginDate,jdbcType=TIMESTAMP}
  	</if>
  	<if test="endDate != null" >
  	and s.bill_time &lt;=#{endDate,jdbcType=TIMESTAMP}
  	</if> 
  </select>
  
  <select id="loadVMListWithPage" parameterType="java.util.Map" resultMap="VMMap">
  	select 
  		<include refid="VM_Column_List" />
  	from t_stock as s
  	left join 	t_organization 	as sio 	on 	s.stock_in_org_id 	= sio.id
  	left join 	t_organization 	as soo	on	s.stock_out_org_id	=soo.id
  	left join 	t_organization 	as po 	on 	s.preparer_org_id 	= po.id
  	left join 	t_organization 	as co	on	s.confirmer_org_id		=co.id
  	left join	t_user			as pu	on	s.preparer_id		=pu.id
  	left join	t_user			as ru	on	s.receiver_id		=ru.id
  	left join	t_stock_goods	as sg	on	sg.stock_id			=s.id
  	left join	ecs_goods		as g	on	sg.goods_id			=g.goods_id 
  	where 1=1 
  	<if test="serialNo != null" >
  	and s.serial_no like CONCAT( '%',#{serialNo,jdbcType=VARCHAR},'%')
  	</if>
  	<if test="stock_in_org_id != null" >
  	and s.stock_in_org_id =#{stockInOrgId,jdbcType=INTEGER}
  	</if> 
  	<if test="stock_out_org_id != null" >
  	and s.stock_out_org_id =#{stockOutOrgId,jdbcType=INTEGER}
  	</if>
  	<if test="beginDate != null" >
  	and s.bill_time &gt;=#{beginDate,jdbcType=TIMESTAMP}
  	</if>
  	<if test="endDate != null" >
  	and s.bill_time &lt;=#{endDate,jdbcType=TIMESTAMP}
  	</if> 
  	<if test="pageStart !=null">
  		limit #{pageStart,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  	</if>
  </select>
  
  <select id="loadVMById" parameterType="java.lang.Integer" resultMap="VMMap">
	select 
  		<include refid="VM_Column_List" />
  	from t_stock as s
  	left join 	t_organization 	as sio 	on 	s.stock_in_org_id 	= sio.id
  	left join 	t_organization 	as soo	on	s.stock_out_org_id	=soo.id
  	left join 	t_organization 	as po 	on 	s.preparer_org_id 	= po.id
  	left join 	t_organization 	as co	on	s.confirmer_org_id		=co.id
  	left join	t_user			as pu	on	s.preparer_id		=pu.id
  	left join	t_user			as ru	on	s.receiver_id		=ru.id
  	left join	t_stock_goods	as sg	on	sg.stock_id			=s.id
  	left join	ecs_goods		as g	on	sg.goods_id			=g.goods_id 
  	where id=  #{id,jdbcType=INTEGER}
  
  </select>
  
  <delete id="deleteByNotExistId" parameterType="java.util.Map">
    delete from t_stock_goods
    	where stock_id = #{stockId,jdbcType=INTEGER}  not in
	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
  		#{item}
 	</foreach>  
  </delete>
  
  
  <update id = "confirmStockBill" parameterType="java.util.Map"  >
  	{call confirmStockBill(#{billId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER})}
  </update>
  
  
</mapper>