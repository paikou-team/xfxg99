<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xfxg99.base.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xfxg99.base.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="is_used" property="isused" jdbcType="INTEGER" />
    <result column="is_alldatapermission" property="isAllDataPermission" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="ViewModelResultMap" type="com.xfxg99.base.viewmodel.UserVM" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="orgName" property="orgName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="is_used" property="isused" jdbcType="INTEGER" />
    <result column="is_alldatapermission" property="isAllDataPermission" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, password, org_id, description, is_used, is_alldatapermission
  </sql> 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xfxg99.base.model.User" >
    insert into t_user (id, name, password, 
      org_id, is_used, is_alldatapermission, description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{orgId,jdbcType=INTEGER}, #{isused,jdbcType=INTEGER},#{isAllDataPermission,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xfxg99.base.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="isused != null" >
        is_used,
      </if>
      <if test="isAllDataPermission != null" >
        is_alldatapermission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isused != null" >
        #{isused,jdbcType=INTEGER},
      </if>
      <if test="isAllDataPermission != null" >
        #{isAllDataPermission,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xfxg99.base.model.User" >
    update t_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isused != null" >
        is_used = #{isused,jdbcType=INTEGER},
      </if>
      <if test="isAllDataPermission != null" >
        is_alldatapermission = #{isAllDataPermission,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xfxg99.base.model.User" >
    update t_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=INTEGER},
      is_used = #{isused,jdbcType=INTEGER},
      is_alldatapermission = #{isAllDataPermission,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="loadAllUser" resultMap="BaseResultMap">
	select 
    	<include refid="Base_Column_List" />
    from t_user
  </select>
  <select id="getMaxId" resultType="java.lang.Integer">
    select 
    MAX(id)
    from t_user
  </select>
  
   <select id="loadUserByNameAndPwd" resultType="com.xfxg99.base.viewmodel.UserVM" parameterType="java.util.Map">  
   	select u.id as id,u.name as name ,'' as password, u.org_id as orgId ,u.is_used as isused ,u.description as description,
   			o.name as orgName
	from t_user u  
	left join t_organization o on u.org_id = o.id
	where u.name = #{name,jdbcType=VARCHAR} and u.password = #{pwd,jdbcType=VARCHAR}
		 limit 0,1;
   </select> 
   
   <select id="loadUserlistWithPage" parameterType="java.util.Map" resultMap="ViewModelResultMap">
  	select 
  		u.id				as	id,
  		u.name				as 	name,
  		u.password			as	password,
  		u.org_id			as	org_id,
  		u.description		as	description,
  		u.is_alldatapermission	as	is_alldatapermission,
  		u.is_used				as	is_used,
  		so.name				as	orgName
  	from t_user as u
  	left join 	t_organization 	as so 	on 	u.org_id 		= so.id
  	where 1=1 
  	<if test="userName != null" >
  	and u.name like CONCAT( '%',#{userName,jdbcType=VARCHAR},'%')
  	</if>
  	<if test="pageStart !=null">
  		limit #{pageStart,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  	</if>
  </select>
   <select id="countByMap" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(*)
  	from t_user   as r
   	where 1=1 
    <if test ="userName !=null">
  		and r.name like CONCAT('%','${userName}','%' )  
 	</if> 
  </select>
  <select id="getUsedOrgIdCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select 
    count(*)
    from t_user
    where org_id = #{orgId,jdbcType=INTEGER}
  </select>
</mapper>