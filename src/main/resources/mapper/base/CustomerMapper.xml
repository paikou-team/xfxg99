<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xfxg99.base.dao.CustomerMapper">
	<resultMap id="VMMap" type="com.xfxg99.base.viewmodel.CustomerVM">
		<id column="user_id" property="id" jdbcType="INTEGER" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="user_name" property="name" jdbcType="VARCHAR" />
		<result column="user_real_name" property="realname" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="period" property="period" jdbcType="INTEGER" />
		<result column="bless_id" property="blessId" jdbcType="INTEGER" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="mobile_phone" property="phone" jdbcType="VARCHAR" />
		<result column="org_name" property="orgName" jdbcType="VARCHAR" />
		<result column="bless_description" property="blessDescription" jdbcType="VARCHAR" />
		<result column="rec_user" property="recUser" jdbcType="VARCHAR" />
		<collection property="addresses" resultMap="AddressesVMMap" />
	</resultMap>
	<resultMap id="AddressesVMMap" type="com.xfxg99.sale.viewmodel.AddressVM">
		<id column="address_id" property="address_id" jdbcType="INTEGER" />
		<result column="address" property="address" jdbcType="VARCHAR" />
	</resultMap>


	<sql id="VM_Column_List">
		s.user_id as user_id,
		s.email as email,
		s.user_name as user_name,
		s.user_real_name as user_real_name,
		s.birthday as birthday,
		g.address as address,
		s.mobile_phone as mobile_phone
	</sql>
	<insert id="insert" parameterType="com.xfxg99.base.viewmodel.CustomerVM">
		insert into ecs_users
		(user_id,
		email, user_name,
		sex, birthday, tjr_name,
		mobile_phone)
		values
		(#{id,jdbcType=INTEGER},
		#{email,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER},
		#{birthday,jdbcType=DATE},
		#{recUser,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR})
	</insert> 
	<update id="updateByPrimaryKey" parameterType="com.xfxg99.base.viewmodel.CustomerVM">
		update ecs_users
		set email = #{email,jdbcType=VARCHAR},
		user_name =
		#{name,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		birthday =
		#{birthday,jdbcType=DATE},
		tjr_name =
		#{recUser,jdbcType=VARCHAR},
		mobile_phone =
		#{phone,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="countVMByMap" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select
		count(*)
		from t_stock as s
		left join t_organization as sio on s.stock_in_org_id = sio.id
		left join t_organization as soo on s.stock_out_org_id =soo.id
		left join t_organization as po on s.preparer_org_id = po.id
		left join t_organization as co on s.confirmer_org_id =co.id
		left join t_user as pu on s.preparer_id =pu.id
		left join t_user as ru on s.confirmer_id =ru.id
		left join t_stock_goods as sg on sg.stock_id =s.id
		left join ecs_goods as g on sg.goods_id =g.goods_id
		where 1=1
		<if test="serialNo != null">
			and s.serial_no like CONCAT( '%',#{serialNo,jdbcType=VARCHAR},'%')
		</if>
		<if test="stock_in_org_id != null">
			and s.stock_in_org_id =#{stockInOrgId,jdbcType=INTEGER}
		</if>
		<if test="stock_out_org_id != null">
			and s.stock_out_org_id =#{stockOutOrgId,jdbcType=INTEGER}
		</if>
		<if test="beginDate != null">
			and s.bill_time &gt;=#{beginDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null">
			and s.bill_time &lt;=#{endDate,jdbcType=TIMESTAMP}
		</if>
	</select>

	<select id="loadVMListWithPage" parameterType="java.util.Map"
		resultMap="VMMap">
		select
		<include refid="VM_Column_List" />
		from ecs_users as s
		left join ecs_user_address as g on s.user_id = g.user_id
		where 1=1
		<if test="pageStart !=null">
			limit #{pageStart,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
		</if>
	</select>

	<select id="loadVMById" parameterType="java.lang.Integer"
		resultMap="VMMap">
		select
		<include refid="VM_Column_List" />
		from ecs_users as s
		left join ecs_user_address as g on s.user_id = g.user_id
		where s.user_id= #{id,jdbcType=INTEGER}

	</select>

	<select id="loadCustUserlist" resultMap="VMMap">
		select 
			u.user_id 		as id,
			u.user_name 	as user_name , 
			u.user_real_name as user_real_name,
			u.email 		as email,
			u.mobile_phone	as mobile_phone ,
			u.tjr_name 		as rec_user,
			u.birthday 		as birthday,
			u.sex 			as sex,
			org.name		as org_name,
			org.id			as org_id
		from ecs_users as u
		left join t_organization as org on u.org_id= org.id
		where 1=1

		<if test="name !=null">
			and u.user_name like CONCAT('%','${name}','%' )
		</if>
 
		<if test="phone !=null">
			and u.mobile_phone like CONCAT('%','${phone}','%' )
		</if>
 
		
		
		
		<if test="pageStart !=null">
			limit #{pageStart,jdbcType=INTEGER},
			#{pageSize,jdbcType=INTEGER}
		</if>
	</select>

	<select id="getCustUserCount" resultType="java.lang.Integer">
		select count(*) from
		ecs_users
		where 1=1

		<if test="name !=null">
			and user_name like CONCAT('%','${name}','%' )
		</if>
	</select>
	
		<select id="countBirthdayInfo" resultType="java.lang.Integer"  parameterType="java.util.Map">
		select 
			count(*)
		from
		(

			select 
				*,
				case 
					when abs(v.p1) &lt; abs(v.p2) then v.p1
					else v.p2
				end as period,
					case 
					when abs(v.p1) &lt; abs(v.p2) then year(v.cb1)
					else year(v.cb2)
				end as cyear
			from
			(
				SELECT   
					user_id,
					user_name,
					email,
					birthday ,
					org_id, 
					mobile_phone,
					DATE_ADD(birthday,INTERVAL TIMESTAMPDIFF(YEAR,birthday,now()) YEAR) as cb1,
					datediff(DATE_ADD(birthday,INTERVAL TIMESTAMPDIFF(YEAR,birthday,now()) YEAR),now()) as p1,
					date_add(birthday,interval year(now())-year(birthday) year) as cb2,
					datediff(date_add(birthday,interval year(now())-year(birthday) year),now()) as p2
				from ecs_users
			)as v
		) as vv
		left join t_organization 	as org on vv.org_id=org.id
		left join t_birthday_log 	as log on vv.cyear= log.birthday_year and vv.user_id = log.cust_id
		where	
			vv.period between -15 and 15
			<if test="custName !=null">
				and vv.user_name  like CONCAT('%',#{custName,jdbcType=VARCHAR},'%' )
			</if>
			<if test="orgName !=null">
				and org.name  like CONCAT('%',#{orgName,jdbcType=VARCHAR},'%' )
			</if>
			<if test="userOrgPath !=null">
				and (org.path  like CONCAT(#{userOrgPath,jdbcType=VARCHAR},'.%' ) or org.path = #{userOrgPath,jdbcType=VARCHAR})
			</if>
	</select>
	
	<select id="loadBirthdayInfoList" resultMap="VMMap"  parameterType="java.util.Map">
		select 
			vv.user_id,
			vv.user_name,
			vv.birthday,
			vv.email, 
			vv.period,
			vv.cyear,
			vv.org_id,
			vv.mobile_phone,
			org.name			as org_Name,
			log.id				as bless_id,
			log.description		as bless_description
		from
		(

			select 
				*,
				case 
					when abs(v.p1) &lt; abs(v.p2) then v.p1
					else v.p2
				end as period,
					case 
					when abs(v.p1) &lt; abs(v.p2) then year(v.cb1)
					else year(v.cb2)
				end as cyear
			from
			(
				SELECT   
					user_id,
					user_name,
					email,
					birthday , 
					org_id,
					mobile_phone,
					DATE_ADD(birthday,INTERVAL TIMESTAMPDIFF(YEAR,birthday,now()) YEAR) as cb1,
					datediff(DATE_ADD(birthday,INTERVAL TIMESTAMPDIFF(YEAR,birthday,now()) YEAR),now()) as p1,
					date_add(birthday,interval year(now())-year(birthday) year) as cb2,
					datediff(date_add(birthday,interval year(now())-year(birthday) year),now()) as p2
				from ecs_users
			)as v
		) as vv
		left join t_organization 	as org on vv.org_id=org.id
		left join t_birthday_log 	as log on vv.cyear= log.birthday_year and vv.user_id = log.cust_id
		where	
			vv.period between -15 and 15
			<if test="custName !=null">
				and vv.user_name  like CONCAT('%',#{custName,jdbcType=VARCHAR},'%' )
			</if>
			<if test="orgName !=null">
				and org.name  like CONCAT('%',#{orgName,jdbcType=VARCHAR},'%' )
			</if>
			<if test="userOrgPath !=null">
				and (org.path  like CONCAT(#{userOrgPath,jdbcType=VARCHAR},'.%' ) or org.path = #{userOrgPath,jdbcType=VARCHAR})
			</if>
		order by
			vv.period
		<if test="pageStart !=null">
			limit #{pageStart,jdbcType=INTEGER},
			#{pageSize,jdbcType=INTEGER}
		</if>
	</select>
	
</mapper>